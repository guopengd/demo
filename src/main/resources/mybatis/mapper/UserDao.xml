<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.dao.UserDao">
    <select id="queryObject" resultType="UserEntity">
        select
        `id` as `id`,
        `username` as `username`,
        `password` as `password`,
        `status` as `status`,
        `email` as `email`,
        `phone` as `phone`,
        `create_date` as `createDate`
        from `sys_user` where `id` = #{value}
    </select>

    <select id="queryByName" resultType="UserEntity">
        select
        `id` as `id`,
        `username` as `username`,
        `password` as `password`,
        `status` as `status`,
        `email` as `email`,
        `phone` as `phone`,
        `create_date` as `createDate`
        from `sys_user` where `username` = #{username}
    </select>

    <select id="queryList" resultType="UserEntity">
        select
        `id` as `id`,
        `username` as `username`,
        `password` as `password`,
        `status` as `status`,
        `email` as `email`,
        `phone` as `phone`,
        `create_date` as `createDate`
        from `sys_user`
        <where>
            <if test="username != null and username.trim() != ''">
                AND username like concat('%',#{username},'%')
            </if>
            <if test="status != null and status.trim() != ''">
                AND status like concat('%',#{status},'%')
            </if>
            <if test="email != null and email.trim() != ''">
                AND email like concat('%',#{email},'%')
            </if>
            <if test="phone != null and phone.trim() != ''">
                AND phone like concat('%',#{phone},'%')
            </if>
        </where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
            <otherwise>
                order by `id` desc
            </otherwise>
        </choose>
        <if test="offset != null and rows != null">
            limit #{offset}, #{rows}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from `sys_user`
        <where>
            <if test="username != null and username.trim() != ''">
                AND username like concat('%',#{username},'%')
            </if>
            <if test="status != null and status.trim() != ''">
                AND status like concat('%',#{operation},'%')
            </if>
            <if test="email != null and email.trim() != ''">
                AND email like concat('%',#{email},'%')
            </if>
            <if test="phone != null and phone.trim() != ''">
                AND phone like concat('%',#{phone},'%')
            </if>
        </where>
    </select>

    <insert id="save" parameterType="UserEntity" useGeneratedKeys="true" keyProperty="id">
        insert into `sys_user`
        (
        `username`,
        `password`,
        `status`,
        `email`,
        `phone`,
        `create_date`
        )
        values
        (
        #{username},
        #{password},
        #{status},
        #{email},
        #{phone},
        #{createDate}
        )
    </insert>

    <update id="update" parameterType="UserEntity">
        update `sys_user`
        <set>
            <if test="username != null">`username` = #{username},</if>
            <if test="password != null">`password` = #{password},</if>
            <if test="status != null">`status` = #{status},</if>
            <if test="email != null">`email` = #{email},</if>
            <if test="phone != null">`phone` = #{phone}</if>
        </set>
        where `id` = #{id}
    </update>

    <delete id="delete">
        delete from `sys_user` where `id` = #{value}
    </delete>

    <!-- 查询用户的所有角色 -->
    <select id="queryAllRoles" resultType="string">
		select ur.`role_name` from
		`sys_user` u
		LEFT JOIN `user_role` ur on u.`id` = ur.`user_id`
		where u.`id` = #{userId}
	</select>

    <!-- 查询用户的所有菜单ID -->
    <select id="queryAllMenuId" resultType="long">
		select distinct
		rm.`menu_id` from `user_role` ur
		LEFT JOIN `role_menu` rm on ur.`id` =
		rm.`role_id`
		where ur.`user_id` = #{userId}
	</select>

    <!-- 查询用户的所有权限 -->
    <select id="queryAllPerms" resultType="string">
        select distinct
        m.`perms` from `user_role` ur
        LEFT JOIN `role_menu` rm on ur.`id` = rm.`role_id`
        LEFT JOIN `menu` m on rm.`menu_id` = m.`id`
        where ur.`user_id` = #{userId}
    </select>

</mapper>